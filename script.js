document.addEventListener('DOMContentLoaded', () => {
    // --- Kh·ªüi t·∫°o c√°c ph·∫ßn t·ª≠ cho c√¢u h·ªèi ban ƒë·∫ßu ---
    const firstQuestionContainer = document.getElementById('first-question-container');
    const yesButton = document.getElementById('yes-button');
    const noButton = document.getElementById('no-button');
    const loveMessage = document.getElementById('love-message');
    const loginContainer = document.querySelector('.login-container'); // Ch·ªçn login container

    const backgroundMusic = document.getElementById('background-music');
    let hasInteracted = false;

    // Hi·ªáu ·ª©ng bong b√≥ng n·ªÅn
    function createBubbles() {
        const numBubbles = 15;
        for (let i = 0; i < numBubbles; i++) {
            const bubble = document.createElement('div');
            bubble.classList.add('bubble');
            bubble.style.left = `${Math.random() * 100}vw`;
            bubble.style.animationDelay = `${Math.random() * 10}s`;
            bubble.style.animationDuration = `${10 + Math.random() * 10}s`;
            document.body.appendChild(bubble);
        }
    }
    createBubbles();

    // --- Logic cho c√¢u h·ªèi "Em c√≥ y√™u anh kh√¥ng?" ---
    yesButton.addEventListener('click', () => {
        loveMessage.classList.remove('hidden'); // Hi·ªán th√¥ng b√°o "Anh y√™u em"
        loveMessage.style.opacity = 1; // ƒê·∫£m b·∫£o opacity ƒë∆∞·ª£c set ƒë·ªÉ animation ch·∫°y
        
        // Ph√°t nh·∫°c khi b·∫•m c√≥
        if (!hasInteracted) {
            backgroundMusic.play().catch(error => {
                console.log("Auto-play prevented, will play on next interaction.");
            });
            hasInteracted = true;
        }

        // ·∫®n c√¢u h·ªèi sau m·ªôt th·ªùi gian v√† hi·ªán form ƒëƒÉng nh·∫≠p
        setTimeout(() => {
            firstQuestionContainer.classList.add('hidden'); // ·∫®n to√†n b·ªô ph·∫ßn h·ªèi
            loginContainer.classList.add('visible'); // Hi·ªán form ƒëƒÉng nh·∫≠p
        }, 2000); // ·∫®n sau 2 gi√¢y
    });

    noButton.addEventListener('mouseover', () => {
        const maxX = window.innerWidth - noButton.offsetWidth;
        const maxY = window.innerHeight - noButton.offsetHeight;

        const randomX = Math.floor(Math.random() * maxX);
        const randomY = Math.floor(Math.random() * maxY);

        noButton.style.position = 'absolute';
        noButton.style.left = `${randomX}px`;
        noButton.style.top = `${randomY}px`;
    });

    noButton.addEventListener('click', (event) => {
        // NgƒÉn ch·∫∑n h√†nh ƒë·ªông m·∫∑c ƒë·ªãnh c·ªßa n√∫t (n·∫øu c√≥)
        event.preventDefault(); 
        // Khi ng∆∞·ªùi d√πng c·ªë b·∫•m "Kh√¥ng", n√≥ v·∫´n s·∫Ω ch·∫°y ƒëi
        // Kh√¥ng l√†m g√¨ kh√°c ·ªü ƒë√¢y, ch·ªâ ƒë·ªÉ hi·ªáu ·ª©ng di chuy·ªÉn l√† ƒë·ªß
    });

    // --- Logic Form ƒêƒÉng Nh·∫≠p ---
    const loginForm = document.getElementById('login-form');
    const usernameInput = document.getElementById('username');
    const passwordInput = document.getElementById('password');
    const errorMessage = document.getElementById('error-message');

    // Thay ƒë·ªïi th√¥ng tin ƒëƒÉng nh·∫≠p t·∫°i ƒë√¢y
    const correctUsername = "18052025"; // Ng√†y sinh c·ªßa b·∫°n v√† ng∆∞·ªùi y√™u (DDMMYYYY)
    const correctPassword = "16051702"; // Ng√†y sinh c·ªßa ng∆∞·ªùi y√™u (DDMMYYYY)

    loginForm.addEventListener('submit', (e) => {
        e.preventDefault(); // NgƒÉn ch·∫∑n form g·ª≠i ƒëi m·∫∑c ƒë·ªãnh

        const enteredUsername = usernameInput.value.trim();
        const enteredPassword = passwordInput.value.trim();

        if (enteredUsername === correctUsername && enteredPassword === correctPassword) {
            // Chuy·ªÉn h∆∞·ªõng sang trang home.html
            window.location.href = 'home.html';
        } else {
            errorMessage.textContent = 'Sai t√†i kho·∫£n ho·∫∑c m·∫≠t kh·∫©u r·ªìi b√© iu! Th·ª≠ l·∫°i nha! üòâ';
            errorMessage.classList.remove('hidden');
            // Th√™m hi·ªáu ·ª©ng rung cho form
            loginForm.classList.add('shake');
            loginForm.addEventListener('animationend', () => {
                loginForm.classList.remove('shake');
            }, { once: true });
        }
    });

    // Th√™m l·∫Øng nghe s·ª± ki·ªán ƒë·ªÉ ph√°t nh·∫°c khi c√≥ t∆∞∆°ng t√°c ƒë·∫ßu ti√™n v·ªõi trang (ngo√†i n√∫t "C√≥")
    document.body.addEventListener('click', () => {
        if (!hasInteracted) {
            backgroundMusic.play().catch(error => {
                console.log("Auto-play prevented, will play on next interaction.");
            });
            hasInteracted = true;
        }
    });
});